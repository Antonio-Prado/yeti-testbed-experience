



Internet Engineering Task Force                             L. Song, Ed.
Internet-Draft                                               D. Liu, Ed.
Intended status: Informational                Beijing Internet Institute
Expires: December 31, 2017                                 P. Vixie, Ed.
                                                                    TISF
                                                               Kato, Ed.
                                            Keio University/WIDE Project
                                                           J. Abley, Ed.
                                                         Snake Hill Labs
                                                           June 29, 2017


                   Yeti DNS Testbed: Interim Results
                 draft-song-yeti-testbed-experience-04

Abstract

   The Internet's Domain Name System is built upon the foundation
   provided by the Root Server System -- that is, the critical
   infrastructure that serves the DNS root zone.

   Yeti DNS is an experimental, non-production testbed that aims to
   provide an environment where technical and operational experiments
   can safely be performed without risk to production infrastructure.
   This testbed has been used by a broad community of participants to
   perform experiments that aim to inform operations and future
   development of the production DNS.  Yeti DNS is an independently-
   coordinated project and is not affiliated with ICANN, IANA or any
   Root Server Operator.

   This document presents a detailed description of how the Yeti DNS
   testbed was constructed, as an aid to future research that might
   benefit from the construction of similar infrastructure.

   This document also includes a summary of experiments performed during
   the first two years of the Yeti DNS project with their findings, and
   is intended to be a stable reference that supports ongoing DNS
   protocol and operations work in the IETF.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.



Song, et al.            Expires December 31, 2017               [Page 1]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on December 31, 2017.

Copyright Notice

   Copyright (c) 2017 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Areas of Study  . . . . . . . . . . . . . . . . . . . . . . .   4
     2.1.  A live DNS Root Testbed . . . . . . . . . . . . . . . . .   5
     2.2.  Yeti-Root Zone Distribution . . . . . . . . . . . . . . .   5
     2.3.  Yeti-Root Server Names and Addressing . . . . . . . . . .   5
     2.4.  IPv6-Only Yeti-Root Servers . . . . . . . . . . . . . . .   5
     2.5.  DNSSEC in the Yeti-Root Zone  . . . . . . . . . . . . . .   5
   3.  Yeti DNS Infrastructure . . . . . . . . . . . . . . . . . . .   6
     3.1.  Root Zone Retrieval . . . . . . . . . . . . . . . . . . .   8
     3.2.  Transformation of Root Zone to Yeti-Root Zone . . . . . .   8
     3.3.  Yeti-Root Zone Distribution . . . . . . . . . . . . . . .   9
     3.4.  Information Synchronization . . . . . . . . . . . . . . .   9
     3.5.  Yeti-Root Server Naming Scheme  . . . . . . . . . . . . .  10
     3.6.  Yeti Root Servers . . . . . . . . . . . . . . . . . . . .  11
     3.7.  Traffic Capture and Analysis  . . . . . . . . . . . . . .  13
   4.  Experience with Yeti DNS  . . . . . . . . . . . . . . . . . .  13
     4.1.  Multiple-ZSK Operations . . . . . . . . . . . . . . . . .  14
       4.1.1.  Proof of Concept  . . . . . . . . . . . . . . . . . .  15
       4.1.2.  Experiment  . . . . . . . . . . . . . . . . . . . . .  15
       4.1.3.  Conclusion  . . . . . . . . . . . . . . . . . . . . .  16
     4.2.  Root Renumbering Issue and Hint File Update . . . . . . .  17
     4.3.  Fragmentation of DNS Responses  . . . . . . . . . . . . .  18
     4.4.  The KSK Rollover Experiment in Yeti . . . . . . . . . . .  18
     4.5.  Bigger ZSK for Yeti . . . . . . . . . . . . . . . . . . .  19



Song, et al.            Expires December 31, 2017               [Page 2]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   5.  Other Technical findings and bugs . . . . . . . . . . . . . .  20
     5.1.  IPv6 fragments issue  . . . . . . . . . . . . . . . . . .  20
     5.2.  Root name compression issue . . . . . . . . . . . . . . .  21
     5.3.  SOA update delay issue  . . . . . . . . . . . . . . . . .  21
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  21
   7.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  21
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  22
   Appendix A.  Yeti-Root Hints File . . . . . . . . . . . . . . . .  25
   Appendix B.  About This Document  . . . . . . . . . . . . . . . .  27
     B.1.  Venue . . . . . . . . . . . . . . . . . . . . . . . . . .  27
     B.2.  Revision History  . . . . . . . . . . . . . . . . . . . .  27
       B.2.1.  draft-song-yeti-testbed-experience-04 . . . . . . . .  27
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  27

1.  Introduction

   The Domain Name System (DNS), as originally specified in [RFC1034]
   and [RFC1035], has proved to be an enduring and important platform
   upon which almost every user of Internet services relies.  Despite
   its longevity, extensions to the protocol, new implementations and
   refinements to DNS operations continue to emerge both inside and
   outside the IETF.

   The Root Server System in particular has seen technical innovation
   and development in recent years, for example in the form of wide-
   scale anycast deployment, the mitigation of unwanted traffic on a
   global scale, the widespread deployment of Response Rate Limiting
   [RRL], the introduction of IPv6 transport, the deployment of DNSSEC,
   changes in DNSSEC key sizes and preparations to roll the root zone's
   trust anchor.  Together, even the projects listed in this brief
   summary imply tremendous operational change, all the more impressive
   when considered the necessary caution when managing Internet critical
   infrastructure, and the context of the adjacent administrative
   changes involved in root zone management and the (relatively
   speaking) massive increase in the the number of delegations in the
   root zone itself.

   Aspects of the operational structure of the Root Server System have
   been described in such documents as [TNO], [ISC-TN-2003-1],
   [RSSAC001] and [RFC7720].  Such references, considered together,
   provide sufficient insight into the operations of the system as a
   whole that it is straightforward to imagine structural changes to the
   root server system's infrastructure, and to wonder what the
   operational implications of such changes might be.

   The Yeti DNS Project was conceived in May 2015 to provide a captive,
   non-production testbed upon which the technical community could
   propose and run experiments designed to answer these kinds of



Song, et al.            Expires December 31, 2017               [Page 3]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   questions.  Coordination for the project was provided by TISF, the
   WIDE Project and the Beijing Internet Institute.  Many volunteers
   collaborated to build a distributed testbed that at the time of
   writing includes 25 Yeti root servers with 16 operators and handles
   experimental traffic from individual volunteers, universities, DNS
   vendors and distributed measurement networks.

   By design, the Yeti testbed system serves the root zone published by
   the IANA with only those structural modifications necessary to ensure
   that it is able to function usefully in the Yeti testbed system
   instead of the production Root Server system.  In particular, no
   delegation for any top-level zone is changed, added or removed from
   the IANA-published root zone to construct the root zone served by the
   Yeti testbed system.  In this document, for clarity, we refer to the
   zone derived from the IANA-published root zone as the Yeti-Root zone.

   As an a informative memo,this document presents a detailed
   description of how the Yeti DNS testbed was constructed as well as a
   summary of the experiments carried out as part of the Yeti DNS
   Project during its first two years of operation.

   The targeted audiences of this memo can be the experienced people who
   are interested in Yeti Testbed and experiments.  The audiences
   without special background on DNS root can follow our introduction to
   better understand the root system and captures the issues in this
   field.

   The rest of this document is organized as follows.  Sections 2
   introduces the areas of study in Yeti DNS Project.  Section 3
   describes the infrastructure of Yeti DNS Root testbed.  Section 4
   presents the experience and findings in some experiments.  Section 5
   presents some of our ideas for future work.

2.  Areas of Study

   In the beginning of Yeti DNS project, there are also some questions
   and preliminary ideas in the mind of project founders.  Later the
   testbed and experiments were designed and implemented which can be
   grouped loosely into multiple set,each representing a somewhat
   distinct set of problem statements.  These areas of study are
   summarized here in the form of lists of questions to give context to
   the Yeti testbed infrastructure and experiments that follow.

   The infrastructure on which the experiments have been run has also
   involved significant effort to build, principally in its operational
   aspects: the coordination of a large pool of volunteers in the
   implementation of the testbed is itself an exercise with relevance to
   the real world, and commentary on the corresponding logistics is also



Song, et al.            Expires December 31, 2017               [Page 4]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   included in this document. *** Davey's note: I'm not sure this
   paragraph is necessary.  Or we can use this paragraph in other
   section.***

2.1.  A live DNS Root Testbed

   o  How to build a live DNS Root Testbed which is flexible and
      adaptive for new experiment idea and changes, especially with the
      coordination of a large pool of volunteers?

   o  How to introduce real traffic or coin the pattern of real traffic
      into the testbed?

2.2.  Yeti-Root Zone Distribution

   o  What are the scaling properties of Yeti-Root zone distribution as
      the number of Yeti-Root servers, Yeti-Root server instances or
      intermediate distribution points increase?

2.3.  Yeti-Root Server Names and Addressing

   o  What naming schemes other than those closely analogous to the use
      of ROOT-SERVERS.NET in the production root zone are practical, and
      what are their respective advantages and disadvantages?

   o  What are the risks and benefits of signing the zone that contains
      the names of the Yeti-Root servers?

   o  What automatic mechanisms might be useful to improve the rate at
      which clients of Yeti-Root servers are able to react to a Yeti-
      Root server renumbering event?

2.4.  IPv6-Only Yeti-Root Servers

   o  Are there negative operational effects in the use of IPv6-only
      Yeti-Root servers, compared to the use of servers that are dual-
      stack?

   o  What effect does the IPv6 fragmentation model have on the
      operation of Yeti-Root servers, compared with that of IPv4?

2.5.  DNSSEC in the Yeti-Root Zone

   o  Is it practical to sign the Yeti-Root zone using multiple,
      independently-operated DNSSEC signers and multiple corresponding
      ZSKs?

   o  To what extent is [RFC5011] supported by resolvers?



Song, et al.            Expires December 31, 2017               [Page 5]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   o  Does the KSK Rollover plan designed and in the process of being
      implemented by ICANN work as expected on the Yeti testbed?

   o  What is the operational impact of using much larger RSA key sizes
      in the ZSKs used in the Yeti-Root?

   o  What are the operational consequences of choosing DNSSEC
      algorithms other than RSA to sign the Yeti-Root zone?

3.  Yeti DNS Infrastructure

   Davey's NOte: I found a subsection is missing in the 03 version :
   "3.3.  Yeti Resolvers and Experimental Traffic".  Isn't it useful to
   introduce how we introduce and mirror traffic ?

   The purpose of the testbed is to allow DNS queries from stub
   resolvers, mediated by recursive resolvers, to be delivered to Yeti-
   Root servers, and for corresponding responses generated on the Yeti-
   Root servers to be returned, as illustrated in Figure 1.


       ,----------.        ,-----------.        ,------------.
       |   stub   +------> | recursive +------> | Yeti-Root  |
       | resolver | <------+ resolver  | <------+ nameserver |
       `----------'        `-----------'        `------------'
          ^                   ^                    ^
          |  appropriate      |  Yeti-Root hints;  |  Yeti-Root zone
          `- resolver         `- Yeti-Root trust   `- with DNSKEY RRSet,
             configured          anchor               signed by Yeti-KSK


                  Figure 1: High-Level Testbed Components

   Davey's note: why DM's role are missing in the figure.

   To use the Yeti DNS testbed, a stub resolver must be explicitly
   configured to use recursive resolvers that have themselves been
   configured to use the Yeti-Root servers.  On the resolvers, that
   configuration consists of a list of names and addresses for the Yeti-
   Root servers (often referred to as a "hints file") that replaces the
   normal Internet DNS hints.  Resolvers also need to be configured with
   a DNSSEC trust anchor that corresponds to a KSK used in the Yeti DNS
   Project, in place of the normal trust anchor for the root zone.

   The need for a Yeti-specific trust anchor in the resolver stems from
   the need to make minimal changes to the root zone, as retrieved from
   the IANA, to transform it into the Yeti-Root that can be used in the
   testbed.  Those changes would be properly rejected by any validator



Song, et al.            Expires December 31, 2017               [Page 6]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   using an accurate root zone trust anchor as bogus.  Corresponding
   changes are required in the Yeti-Root hints file Appendix A.

   The data flow from IANA to stub resolvers through the Yeti testbed is
   illustrated in Figure 2 and are described in more detail in the
   sections that follow.


                                  ,----------------.
                             ,-- / IANA Root Zone / ---.
                             |  `----------------'     |
                             |            |            |
                             |            |            |       Root Zone
     ,--------------.    ,---V---.    ,---V---.    ,---V---.
     | Yeti Traffic |    | BII   |    | WIDE  |    | TISF  |
     | Collection   |    |  DM   |    |  DM   |    |  DM   |
     `----+----+----'    `---+---'    `---+---'    `---+---'
          |    |       ,-----'    ,-------'            `----.
          |    |       |          |                         |
          ^    ^       |          |                         |  Yeti-Root
          |    |   ,---V---.  ,---V---.                 ,---V---.
          |    `---+ Yeti  |  | Yeti  |  . . . . . . .  | Yeti  |
          |        | Root  |  | Root  |                 | Root  |
          |        `---+---'  `---+---'                 `---+---'
          |            |          |                         |  DNS
          |            |          |                         |  Response
          |         ,--V----------V-------------------------V--.
          `---------+              Yeti Resolvers              |
                    `--------------------+---------------------'
                                         |                     DNS
                                         |                     Response
                    ,--------------------V---------------------.
                    |            Yeti Stub Resolvers           |
                    `------------------------------------------'


                        Figure 2: Testbed Data Flow

   Davey's note: Multiple-DM setting is default and feature of Yeti DNS.
   So I think we should highlight it somewhere.  So I add the following
   paragraph:

   While in principle this could be done by a single DM, Yeti uses a set
   of three DMs to introduce a important model to implement the concept
   of "shared zone control" proposed in ICANN ITI report [reference!].In
   this model each of three DMs independently fetches the root zone from
   IANA, signs it and publishes the latest zone data to Yeti root
   servers.



Song, et al.            Expires December 31, 2017               [Page 7]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


3.1.  Root Zone Retrieval

   Since Yeti DNS servers cannot receive DNS NOTIFY [RFC1996] messages
   from the Root Server System, a polling approach is used.  Each Yeti
   Distribution Master (DM) requests the root zone SOA record from
   F-Root and performs a zone transfer from the same server if the
   retrieved value of SOA.SERIAL is greater than that of the last
   retrieved zone.

   At the time of writing, unauthenticated zone transfers of the root
   zone are available directly from B-Root, C-Root, F-Root, G-Root and
   K-Root, and from L-Root via the two servers XFR.CJR.DNS.ICANN.ORG and
   XFR.LAX.DNS.ICANN.ORG, as well as via FTP from sites maintained by
   the Root Zone Maintainer and the IANA Functions Operator.  The Yeti
   DNS Testbed retrieves the root zone from using zone transfers from
   F-Root.  The schedule on which F-Root is polled by each Yeti DM is as
   follows:

                  +-------------+-----------------------+
                  | DM Operator | Time                  |
                  +-------------+-----------------------+
                  | BII         | UTC hour + 00 minutes |
                  | WIDE        | UTC hour + 20 minutes |
                  | TISF        | UTC hour + 40 minutes |
                  +-------------+-----------------------+

3.2.  Transformation of Root Zone to Yeti-Root Zone

   Davey's note: The routine of DM are documented in :
   https://github.com/BII-Lab/Yeti-Project/blob/master/doc/Yeti-DM-
   Setup.md.  Regarding the SOA record, it is said "The MNAME and RNAME
   are set to Yeti values".  Currently we implement like this: MNAME:
   www.yeti-dns.org.  RNAME: DM-operator.yeti-dns.org.  Such as
   wide.yeti-dns.org for WIDE and bii.yeti-dns.org for BII.

   XXX(need description of the precise process followed here)XXX

   XXX(remove RRSIG)XXX

   XXX(remove apex NS RRSet)XXX

   XXX(add apex Yeti NS RRSet)XXX

   XXX(remove apex DNSKEY RRSet)XXX

   XXX(add apex Yeti DNSKEY RRSet)XXX

   XXX(sign zone using specified keys)XXX



Song, et al.            Expires December 31, 2017               [Page 8]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   The transformation of Root Zone to Yeti-Root zone takes place
   independently on each of the Yeti DMs.

   Note SOA.SERIAL preservation during transformation process.

3.3.  Yeti-Root Zone Distribution

   Davey's note: I re-sent mail with title : DM configuration

   XXX(need details about NOTIFY configuration on Yeti-DMs)XXX

   XXX(need details about TSIG authentication on Yeti-DMs)XXX

   XXX(examples of configuration from DMs and Yeti-Root servers might be
   handy)XXX

3.4.  Information Synchronization

   XXX(Joe needs more information about the content of this section
   before he can suggest changes)XXX

   Given three DMs operational in Yeti root system, it is necessary to
   prevent any inconsistency caused by human mistakes in operation.  The
   straight method is to share the same parameters to produce the Yeti
   root zone.  There parameters includes following set of files:

   o  the list of Yeti root servers, including:

      *  public IPv6 address and host name

      *  IPv6 addresses originating zone transfer

      *  IPv6 addresses to send DNS notify to

   o  the ZSKs used to sign the root

   o  the KSK used to sign the root

   o  the SERIAL when this information is active

   XXX(that list describes the contents of files, not the files
   themselves.  Can I see examples of the actual files that are
   used?)XXX

   Davey's Note: I sent you a mailing with the title: directories and
   files in DM's repo.





Song, et al.            Expires December 31, 2017               [Page 9]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   The operation is simple that each DM operator synchronize the files
   with the information needed to produce the Yeti root zone.
   XXX(how?)XXX When a change is desired XX(by whom?)XX (such as adding
   a new server or rolling the ZSK), a DM operator updates the local
   file and push to other DM XX(how?)XX.  A SOA SERIAL in the future is
   chosen for when the changes become active.

3.5.  Yeti-Root Server Naming Scheme

   The current naming scheme was normalized to use single-character host
   names (A through M) under the domain ROOT-SERVERS.NET (More
   information can be found in [RSSAC023]).  One reason behind this
   naming scheme is that DNS label compression can be used to produce a
   smaller DNS response within 512 bytes.  In Yeti testbed it reuse the
   originally naming scheme using free-form names chosen by their
   respective operators(Appendix A).  This naming schemes is chosen to
   fulfill following purposes:

   o  Intentionally produces larger packets for priming responses for
      less name compression efficiency.  One Yeti experiment is to test
      the package fragmentation in IPv6-only environment

   o  Remove the dependency on the single name like .NET or root-
      servers.net.  Yeti enjoy more more participation from independent
      participant and avoid central administration on naming as much as
      possible.

   o  Encourage DNSSEC deployment on individual Root names

   There is a issue for this naming scheme in which the priming response
   may not contain all glue record for Yeti Root servers.  It is
   documented as a technical findings [Yeti-glue-issue].  There are two
   approaches to solve the issue: one is to patch BIND 9 to includes the
   glue records in the additional section.  The other one is to add a
   zone file for each root server and answer for all of them at each
   Yeti server.  That means each Yeti root server would have a small
   zone file for "bii.dns-lab.net", "yeti-ns.wide.ad.jp", "yeti-
   ns.tisf.net", and so on.

   Another naming scheme under Yeti lab test is to use a special non-
   delegated TLD, like .yeti-dns for root server operated by BII.  The
   benefit of non-delegated TLD naming scheme are in two aspects: 1) the
   response to a priming query is protected by DNSSEC; 2) To meet a
   political reason that the zone authoritative for root server is not
   delegated and belong to particular companies or organizations except
   IANA; 3) reduce the dependency of root server names to other DNS
   service; 4) to mitigate some kind of cache poisoning activities.




Song, et al.            Expires December 31, 2017              [Page 10]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   It is found that modification of IANA root zone by adding a new TLD
   is so controversial even for scientific purpose.  There are non-
   trivial discussions on this issue in Yeti discuss mailing list,
   regarding the proposal .yeti-dns for root name or .local for new
   AS112 [I-D.bortzmeyer-dname-root].  It is argued that this kind of
   experiment should based on community consensus from technical bodies
   like IETF and be operated within a limited duration in some cases.

   Note that The ICANN Root Server System Advisory Committee (RSSAC) is
   working on a related document which aims to analyze alternative
   naming schemes.

3.6.  Yeti Root Servers

   Various volunteers have donated authoritative servers to act as Yeti-
   Root servers.  At the time of writing there are 25 Yeti-Root servers
   distributed globally, one of which is named using an IDNA2008
   [RFC5890] label, shown in the following list in punycode.

































Song, et al.            Expires December 31, 2017              [Page 11]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   +-------------------------------------+---------------+-------------+
   | Name                                | Operator      | Location    |
   +-------------------------------------+---------------+-------------+
   | bii.dns-lab.net                     | BII           | CHINA       |
   | yet-ns.tsif.net                     | TSIF          | U.S.A       |
   | yeti-ns.wide.ad.jp                  | WIDE Project  | Japan       |
   | yeti-ns.as59715.net                 | as59715       | Italy       |
   | dahu1.yeti.eu.org                   | Dahu Group    | France      |
   | ns-yeti.bondis.org                  | Bond Internet | Spain       |
   |                                     | Systems       |             |
   | yeti-ns.ix.ru                       | Russia        | MSK-IX      |
   | yeti.bofh.priv.at                   | CERT Austria  | Austria     |
   | yeti.ipv6.ernet.in                  | ERNET India   | India       |
   | yeti-dns01.dnsworkshop.org          | dnsworkshop   | Germany     |
   |                                     | /informnis    |             |
   | yeti-ns.conit.co                    | CONIT S.A.S   | Colombia    |
   | dahu2.yeti.eu.org                   | Dahu Group    | France      |
   | yeti.aquaray.com                    | Aqua Ray SAS  | France      |
   | yeti-ns.switch.ch                   | SWITCH        | Switzerland |
   | yeti-ns.lab.nic.cl                  | CHILE NIC     | Chile       |
   | yeti-ns1.dns-lab.net                | BII           | China       |
   | yeti-ns2.dns-lab.net                | BII           | China       |
   | yeti-ns3.dns-lab.net                | BII           | China       |
   | ca...a23dc.yeti-dns.net             | Yeti-ZA       | South       |
   |                                     |               | Africa      |
   | 3f...374cd.yeti-dns.net             | Yeti-AU       | Australia   |
   | yeti1.ipv6.ernet.in                 | ERNET India   | India       |
   | xn--r2bi1c.xn--h2bv6c0a.xn--h2brj9c | ERNET India   | India       |
   | yeti-dns02.dnsworkshop.org          | dnsworkshop   | U.S.A       |
   |                                     | /informnis    |             |
   | yeti.mind-dns.nl                    | Monshouwer    | Netherlands |
   |                                     | Internet      |             |
   |                                     | Diensten      |             |
   | yeti-ns.datev.net                   | DATEV         | Germany     |
   +-------------------------------------+---------------+-------------+

   The current list of Yeti-Root server is made available to a
   participating resolver first using a substitute hints file Appendix A
   and subsequently by the usual resolver priming process
   [I-D.ietf-dnsop-resolver-priming].  All Yeti-Root servers are
   IPv6-only, foreshadowing a future IPv6-only Internet, and hence the
   Yeti-Root hints file contains no IPv4 addresses and the Yeti-Root
   zone contains no IPv4 glue.

   At the time of writing, all root servers within the Root Server
   System serve the ROOT-SERVERS.NET zone in addition to the root zone,
   and all but one also serve the ARPA zone.  Yeti-Root servers serve
   the Yeti-Root zone only.



Song, et al.            Expires December 31, 2017              [Page 12]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   Significant software diversity exists across the set of Yeti-Root
   servers, as reported by their volunteer operators:

   o  Platform: 20 of 25 Yeti-Root servers are implemented on a VPS
      rather than bare metal.

   o  Operating System: 6 Yeti-Root servers run on on Linux (Ubuntu,
      Debian, CentOS, and ArchLinux); 5 run on FreeBSD and 1 on NetBSD.
      The remainder were not disclosed (XXX really? surely we can find
      this out.  Davey's Note I have update information.  I will send to
      you later)

   o  DNS software: 18 of 25 Yeti-Root servers use BIND9 (versions
      varying between 9.9.7 and 9.10.3); four use NSD (4.10 and 4.15);
      two use Knot (2.0.1 and 2.1.0) and one uses Bundy (1.2.0).

3.7.  Traffic Capture and Analysis

   Query and response traffic capture is available in the testbed in
   both Yeti resolvers and Yeti-Root servers in anticipation of
   experiments that require packet-level visibility into DNS traffic.

   Traffic capture is performed on Yeti-Root servers using either dnscap
   <https://www.dns-oarc.net/tools/dnscap> or pcapdump (part of the
   pcaputils Debian package <https://packages.debian.org/sid/pcaputils>,
   with a patch to facilitate triggered file upload
   <https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=545985>.  PCAP-
   format files containing packet captures are uploaded using (XXX check
   mechanism) to a central repository.

4.  Experience with Yeti DNS

   As introduced, Yeti DNS is a root testbed designed for trying new
   ideas.  For each proposed idea, it is firstly tested in Lab
   environment as a proof of concept before it is implemented in the
   testbed.  The approach is straightforward that we set the system up
   according to the experiment proposal with monitoring on the data flow
   and resolution path.  Operational issues, impacts and complexities
   are observed and discussed mainly in the mailing list.  Some
   experiments and findings are summarized in the blog of Yeti DNS
   Project.  This section introduces the experience with Yeti DNS.

   Davey's note: we have done other experiments and document them in
   yeti blog.  If you find them useful we can add to experiment section:
   1) http://yeti-dns.org/yeti/blog/2017/03/26/Monitoring-on-Yeti-Root-
   Zone-Update.html 2) http://yeti-dns.org/yeti/blog/2017/03/03/bind-
   edns-fallback-and-dn.ssec-issue.html 3) http://yeti-
   dns.org/yeti/blog/2016/12/20/Scoring-the-Yeti-DNS-Root-Server-



Song, et al.            Expires December 31, 2017              [Page 13]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   System.html 4) http://yeti-dns.org/yeti/blog/2016/10/26/A-DNSSEC-
   issue-during-Yeti-KSK-rollover.html

4.1.  Multiple-ZSK Operations

   Davey's note: There are two documents in repo which will helpfull for
   you: 1) https://github.com/BII-Lab/Yeti-Project/blob/master/doc/
   Report-MZSK.md 2)https://github.com/BII-Lab/Yeti-
   Project/blob/master/doc/Experiment-MZSK.md

   The Root Server System incorporates a root zone signed using DNSSEC.
   Responsibility for cryptographic operations is split between the IANA
   Functions Operator (PTI), who takes responsibility for management of
   the Key Signing Key (KSK) and associated trust anchor, and the Root
   Zone Maintainer (VeriSign) who manages the Zone Signing Key (ZSK).

   There is no known operational concern with this approach.  However,
   analogous to the established principle of using multiple, independent
   operators to make the Root Server System robust, an alternative
   system was implemented in the Yeti DNS Testbed to add diversity to
   DNSSEC operations and assess the impact of any additional complexity
   of such an approach on the stability of the Yeti DNS Testbed as a
   whole.

   The Multi-ZSK experiment is designed to test operating the Yeti root
   using more than a single ZSK.  The goal is to have each distribution
   master (DM) have a separate ZSK, signed by a single KSK.  This will
   allow DM to operate independently, each maintaining their own key
   secret material.


                          +--------------+         +-----------+
                 +------->| BII ZSK      |-------->| Yeti root |
                 | signs  +--------------+  signs  +-----------+
                 |
   +-----------+ |        +--------------+         +-----------+
   | Yeti KSK  |-+------->| TISF ZSK     |-------->| Yeti root |
   +-----------+ | signs  +--------------+  signs  +-----------+
                 |
                 |        +--------------+         +-----------+
                 +------->| WIDE ZSK     |-------->| Yeti root |
                   signs  +--------------+  signs  +-----------+


                     Figure 3: Multiple ZSK Experiment

   In the MZSK setup, each DM maintains a separate ZSK and produces a
   version of the root zone with different signatures.  Aside from the



Song, et al.            Expires December 31, 2017              [Page 14]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   signatures, the contents of the Yeti root zone is identical, as shown
   in Figure 3.

   In DNSSEC, the KSK and ZSK are all returned in a single value, the
   DNSKEY Resource Record Set (RRset).  Because of this, DNSSEC
   resolvers are able to validate answers as long as they are signed by
   any of the ZSK.

   This experiment will test the behavior of the Yeti root servers and
   resolvers as we have multiple ZSK, both during normal operation and
   during rollover.  We did not change the algorithm used, the key
   lengths, or the timings. ***Davey: algorithm, key lengths and timing
   is ought to be introduce in section 3, architecture part****

4.1.1.  Proof of Concept

   XXX There is some detail missing from this description of the
   environment tested in the lab.  Presuably "A and B" are placeholders
   for Yeti-Root servers deployed in a captive environment to test, and
   not related to actual Yeti-Root servers.  The phrase "resolver
   switch" is not familiar, and needs explanation.  There's no detail
   about the algorithms or key sizes used in the ZSKs, how the root zone
   apex DNSKEY RRSet was constructed, what signatures by the KSK were
   involved, and what trust anchors were configured in validators.  The
   commentary on response size is suggestive of experimentation, but no
   experiment is described.  We need more detail of what happened here
   for its inclusion in this document to be useful.  XXX

   Davey's notes: a full report on this lab test: http://lists.yeti-
   dns.org/pipermail/discuss/attachments/20151021/01fd3827/
   attachment.txt.  Right now I just use a brief description below on
   this lab test to show the result.

   In preparation for the experiment, a lab test was done to verify the
   behavior of DNS resolvers under controlled conditions.  A DNS
   resolver was configured using two experimental root servers.  Traffic
   was sent insuring that the resolver had the ZSK from one or both of
   the servers, and then the validation results checked.  The lab test
   confirmed that if a root server tried to use a ZSK that was not
   present in the DNSKEY RRset that it would fail, but that even if two
   servers used separate ZSK this resolves properly as long as they are
   both present in the DNSKEY RRset.

4.1.2.  Experiment

   After the lab test, the MZSK experiment is being conducted on the
   Yeti platform.  There are two phases:




Song, et al.            Expires December 31, 2017              [Page 15]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   XXX It's not entirely obvious that Phase 1 here does not correspond
   to the lab experiment described above in "Proof of Concept".  Is it
   different?  Is there a more detailed description of what was done,
   here?  XXX

   Davey's note:Phase 1 is different from proof of concept because it is
   done in the Yeti root testbed not lab test.  You can refer to the
   link: https://github.com/BII-Lab/Yeti-Project/blob/master/doc/
   Experiment-MZSK.md#phase-1

   o  Phase 1.  In the first phase, we confirmed that using multiple
      ZSKs works in the wild.  We insured that using the maximum number
      of ZSKs continues to work in the resolver side.  Here one of the
      DM (BII) created and added 5 ZSKs using the existing
      synchronization mechanism.  (If all 3 ZSKs are rolling then we
      have 6 total.  To get this number we add 5.)

   o  Phase 2.  In the second phase, we delegated the management of the
      ZSKs so that each DM creates and publishes a separate ZSK.  For
      this phase, modified zone generation protocol and software was
      used [Yeti-DM-Sync-MZSK], which allows the DM to sign without
      access to the private parts of ZSKs generated by other DMs.  In
      this phase we roll all three ZSKs separately.

4.1.3.  Conclusion

   XXX There are not really any substantive results described in the
   text below.  Presumably the core conclusion is that the approach with
   multiple ZSK managers works, but to answer the question we want to
   know about failure modes, operational complexity, etc -- the notes
   below suggest success on the grounds of "we got it running after some
   difficulties" but say nothing about the other stuff.  XXX

   Davey's note: The two documents about MZSK experiment may give you
   some clue.  In general in my understand, we are not sure 1) DNSSEC
   resolvers continue to function properly with a MZSK setup (may fail?)
   2)Yeti system would continue to function properly with an MZSK
   setup(do we need any specially setup ?) 3)the impact for large
   response (we report one error due to the failure)

   The MZSK experiment was finished by the end of 2016-04.  Almost
   everything appears to be working.  But there have been some findings
   [Experiment-MZSK-notes], including discovering that IPv6 fragmented
   packets are not forwarded on an Ethernet bridge with netfilter
   ip6_tables loaded on one authority server, and issue with IXFR
   falling back to AXFR due to multiple signers which will be detailed
   in a separate draft describing as a problem statement.




Song, et al.            Expires December 31, 2017              [Page 16]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


4.2.  Root Renumbering Issue and Hint File Update

   XXX This experiment seems to be more about testing a script than
   finding something out about the root server system using a testbed.
   Presumably the tool described here could be more conventionally
   tested using a set of unit tests using (e.g.) vagrant.  What is the
   experiment here that requires the use of the Yeti testbed?  The final
   paragraph suggests that the testbed provides a useful place for this
   work because in the Yeti-Root the root zone apex NS set is signed,
   whereas in the root zone it is not.  But that is demonstrably
   incorrect; the root zone apex NS set *is* signed.  XXX

   Davey's note: I think we could put it into another section or
   subsection : Yeti tools.  Right now we did not document them.
   Actually we have some tools developed for Yeti.  Let's me give you
   some links: 1)http://yeti-dns.org/yeti/blog/2016/06/15/Mirroring-
   traffic-using-dnsdist.html 2) http://dnsv6lab.net/2016/09/06/DNS-
   pcap-fragments/ 3) http://dnsv6lab.net/2016/10/13/ymmv/

   With the recent renumbering of H root Server's IP address, there is a
   discussion of ways that resolvers can update their hint file.
   Traditional ways include using FTP protocol by doing a wget and using
   dig to double-check the servers' addresses manually.  Each way would
   depend on manual operation.  As a result, there are many old machines
   that have not updated their hint files.  As a proof, after completion
   of renumbering in thirteen years ago, there is an observation that
   the "Old J-Root" can still receive DNS query traffic
   [Renumbering-J-Root].

   This experiment proposal aims to find an automatic way for hint-file
   updating.  The already-completed work is a shell script tool which
   provides the function that updates a hint-file in file system
   automatically with DNSSEC and trust anchor validation.
   [Hintfile-Auto-Update].

   The methodology is straightforward.  The tool first queries the NS
   list for "." domain and queries A and AAAA records for every name on
   the NS list.  It requires DNSSEC validation for both the NS list and
   the A and AAAA answers.  After getting all the answers, the tool
   compares the new hint file with the old one.  If there is a
   difference, it renames the old one with a time-stamp and replaces the
   old one with the new one.  Otherwise the tool deletes the new hint
   file and nothing will be changed.

   Note that in current IANA root system the servers named in the root
   NS record are not signed.  So the tool can not fully work in the
   production network.  In Yeti root system some of the names listed in




Song, et al.            Expires December 31, 2017              [Page 17]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   the NS record are signed, which provides a test environment for such
   a proposal.

4.3.  Fragmentation of DNS Responses

   XXX This section starts to identify a problem, but does not actually
   describe an experiment, any results or a conclusion.  Was an
   experiment carried out?  Where is it described?  XXX

   Davey's note: Actually we just observe bugs or weird issues during
   the IPv6-only root operation.  One possible way is to put it as an
   collection of fingds or report on issues we observed.  Right now I
   have a dataset from Atlas probes which give me some hint that IPv6
   fragmentation caused by large response do increase the failure rate
   using UDP.  I may introduce it later when we meet in Prague.

   In consideration of new DNS protocol and operation, there is always a
   hard limit on the DNS packet size.  Take Yeti for example: adding
   more root servers, using the Yeti naming scheme, rolling the KSK, and
   Multi-ZSK all increase the packet size.  The fear of large DNS
   packets mainly stem from two aspects: one is IP-fragments and the
   other is frequently falling back to TCP.

   Fragmentation may cause serious issues; if one of the fragment is
   lost at random, it results in the loss of entire packet and involve
   timeout.  If the fragment is dropped by a middle-box, the query
   always results in failure, and result in name resolution failure
   unless the resolver falls back to TCP.  It is known at this moment
   that limited number of security middle-box implementations support
   IPv6 fragments.

   A possible solution is to split a single DNS message across multiple
   UDP datagrams.  This DNS fragments mechanism is documented in
   [I-D.muks-dns-message-fragments] as an experimental IETF draft.

4.4.  The KSK Rollover Experiment in Yeti

   The Yeti DNS Project provides a good basis to conduct a real-world
   experiment of a KSK rollover in the root zone.  It is not a perfect
   analogy to the IANA root because all of the resolvers to the Yeti
   experiment are "opt-in", and are presumably run by administrators who
   are interested in the DNS and knowledgeable about it.  Still, it can
   inform the IANA root KSK roll.

   The IANA root KSK has not been rolled as of the writing.  ICANN put
   together a design team to analyze the problem and make
   recommendations.  The design team put together a
   plan[ICANN-ROOT-ROLL].  The Yeti DNS Project may evaluate this



Song, et al.            Expires December 31, 2017              [Page 18]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   scenario for an experimental KSK roll.  The experiment may not be
   identical, since the time-lines laid out in the current IANA plan are
   very long, and the Yeti DNS Project would like to conduct the
   experiment in a shorter time, which may considered much difficult.

   The Yeti KSK is rolled twice in Yeti testbed as of the writing.  In
   the first trial, it made old KSK inactive and new key active in one
   week after new key created, and deleted the old key in another week,
   which was totally unaware the timer specified in RFC5011.  Because
   the hold-down timer was not correctly set in the server side, some
   clients (like Unbound) receive SERVFAILs (like dig without +cd)
   because the new key was still in AddPend state when old key was
   inactive.  The lesson from the first KSK trial is that both server
   and client should compliant to RFC5011.

   For the second KSK rollover, it waited 30 days after a new KSK is
   published in the root zone.  Different from ICANN rollover plan, it
   revokes the old key once the new key become active.  We don't want to
   wait too long, so we shorten the time for key publish and delete in
   server side.  As of the writing, only one bug [KROLL-ISSUE]spotted on
   one Yeti resolver (using BIND 9.10.4-p2) during the second Yeti KSK
   rollover.  The resolver is configured with multiple views before the
   KSK rollover.  DNSSEC failures are reported once we added new view
   for new users after rolling the key.  By checking the manual of
   BIND9.10.4-P2, it is said that unlike trusted-keys, managed-keys may
   only be set at the top level of named.conf, not within a view.  It
   gives an assumption that for each view, managed-key can not be set
   per view in BIND.  But right after setting the managed-keys of new
   views, the DNSSEC validation works for this view.  As a conclusion
   for this issue, we suggest currently BIND multiple-view operation
   needs extra guidance for RFC5011.  The manage-keys should be set
   carefully during the KSK rollover for each view when the it is
   created.

   Another of the questions of KSK rollover is how can an authority
   server know the resolver is ready for RFC5011.  Two Internet-Drafts
   [I-D.wessels-edns-key-tag] and [I-D.wkumari-dnsop-trust-management]
   try to address the problem.  In addition a compliant resolver
   implementation may fail without any complain if it is not correctly
   configured.  In the case of Unbound 1.5.8, the key is only readable
   for DNS users [auto-trust-anchor-file].

4.5.  Bigger ZSK for Yeti

   Currently IANA root system uses 1024-bits ZSK which is no longer
   recommended cryptography.  VeriSign announced at DNS-OARC 24th
   workshop that the IANA root zone ZSK will be increased from 1024 bits




Song, et al.            Expires December 31, 2017              [Page 19]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   to 2048 bits in 2016.  However, it is not fully tested by the real
   environment.

   Bigger key tend to produce a larger response which requires IP
   fragmentation and is commonly considered harm for DNS system.  In
   Yeti DNS Project, it is desirable to test bigger responses in many
   aspects.  The Big ZSK experiment is designed to test operating the
   Yeti root with a 2048-bit ZSK.  The traffic is monitored before and
   after we lengthen the ZSK to see if there are any changes, such as a
   drop off of packets or a increase in retries.  The current status of
   this experiment is under monitoring data analysis.

5.  Other Technical findings and bugs

   Besides the experiments with specific goals and procedures, some
   unexpected bugs have been reported.  It is worthwhile to record them
   as technical findings from Yeti DNS Project.

5.1.  IPv6 fragments issue

   Davey's note: Maybe we can move and extend it to section 4.3

   There are two cases in Yeti testbed reported that some Yeti root
   servers failed to pull the zone from a Distribution Master via AXFR/
   IXFR.  Two facts have been revealed in both client side and server
   side after trouble shooting.

   One fact in client side is that some operation system can not handle
   IPv6 fragments correctly and AXRF/IXFR in TCP fails.  The bug covers
   several OSs and one VM platform (listed below).

                +-----------------------+-----------------+
                | OS                    | VM              |
                +-----------------------+-----------------+
                | NetBSD 6.1 and 7.0RC1 | VMware ESXI 5.5 |
                | FreeBSD10.0           |                 |
                | Debian 3.2            |                 |
                +-----------------------+-----------------+

   Another fact is from server side in which one TCP segment of AXRF/
   IXFR is fragmented in IP layer resulting in two fragmented packets.
   This weird behavior has been documented IETF
   draft[I-D.andrews-tcp-and-ipv6-use-minmtu].  It reports a situation
   that some implementations of TCP running over IPv6 neglect to check
   the IPV6_USE_MIN_MTU value when performing MSS negotiation and when
   constructing a TCP segment.  It will cause TCP MSS option set to 1440
   bytes, but IP layer will limit the packet less than 1280 bytes and
   fragment the packet to two fragmented packets.



Song, et al.            Expires December 31, 2017              [Page 20]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   While the latter is not a technical error, but it will cause the
   error in the former fact which deserves much attention in IPv6
   operation.

5.2.  Root name compression issue

   [RFC1035]specifies DNS massage compression scheme which allows a
   domain name in a message to be represented as either: 1) a sequence
   of labels ending in a zero octet, 2) a pointer, 3) or a sequence of
   labels ending with a pointer.  It is designed to save more room of
   DNS packet.

   However in Yeti testbed, it is found that Knot 2.0 server compresses
   even the root.  It means in a DNS message the name of root (a zero
   octet) is replaced by a pointer of 2 octets.  As well, it is legal
   but breaks some tools (Go DNS lib in this bug report) which does not
   expect such name compression for root.  Both Knot and Go DNS lib have
   fixed that bug by now.

5.3.  SOA update delay issue

   It is observed one server on Yeti testbed have some bugs on SOA
   update with more than 10 hours delay.  It is running on Bundy 1.2.0
   on FreeBSD 10.2-RELEASE.  A workaround is to check DM's SOA status in
   regular base.  But it still need some work to find the bug in code
   path to improve the software.

6.  IANA Considerations

   This document requires no action from the IANA.

7.  Acknowledgments

   The editors fully acknowledge that this memo is based on joint work
   and discussions of many people in the mailing list of the Yeti DNS
   Project [Yeti-DNS-Project].  Some of them actually are co-authors of
   this memo but limited by the number of co-authors listed in the
   headline.  The people deserve the credit who help to construct the
   Yeti testbed and contribute to this document, so their effort is
   acknowledged here with a name list:

   Tomohiro Ishihara, Antonio Prado, Stephane Bortzmeyer, Mickael
   Jouanne, Pierre Beyssac, Joao Damas, Pavel Khramtsov, Ma Yan, Otmar
   Lendl, Praveen Misra, Carsten Strotmann, Edwin Gomez, Remi Gacogne,
   Guillaume de Lafond, Yves Bovard, Hugo Salgado-Hernandez, Li Zhen,
   Daobiao Gong, Runxia Wan.





Song, et al.            Expires December 31, 2017              [Page 21]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   Acknowledgment to all anonymous Yeti participants and volunteers who
   contribute Yeti resolvers to make the experimental testbed functional
   and workable.

8.  References

   [auto-trust-anchor-file]
              "Unbound should test that auto-* files are writable",
              2016, <https://www.nlnetlabs.nl/bugs-script/
              show_bug.cgi?id=758>.

   [Experiment-MZSK-notes]
              "MZSK Experiment Notes", 2016, <https://github.com/shane-
              kerr/Yeti-Project/blob/experiment-mzsk/doc/Experiment-
              MZSK-notes.md>.

   [Fragmenting-IPv6]
              Huston, G., "Fragmenting-IPv6", May 2016,
              <http://blog.apnic.net/2016/05/19/fragmenting-ipv6/>.

   [Hintfile-Auto-Update]
              "Hintfile Auto Update", 2015, <https://github.com/BII-Lab/
              Hintfile-Auto-Update>.

   [I-D.andrews-tcp-and-ipv6-use-minmtu]
              Andrews, M., "TCP Fails To Respect IPV6_USE_MIN_MTU",
              draft-andrews-tcp-and-ipv6-use-minmtu-04 (work in
              progress), October 2015.

   [I-D.bortzmeyer-dname-root]
              Bortzmeyer, S., "Using DNAME in the root for the
              delegation of special-use TLDs", draft-bortzmeyer-dname-
              root-00 (work in progress), April 2016.

   [I-D.ietf-dnsop-resolver-priming]
              Koch, P., Larson, M., and P. Hoffman, "Initializing a DNS
              Resolver with Priming Queries", draft-ietf-dnsop-resolver-
              priming-07 (work in progress), March 2016.

   [I-D.muks-dns-message-fragments]
              Sivaraman, M., Kerr, S., and D. Song, "DNS message
              fragments", draft-muks-dns-message-fragments-00 (work in
              progress), July 2015.

   [I-D.wessels-edns-key-tag]
              Wessels, D., "The EDNS Key Tag Option", draft-wessels-
              edns-key-tag-00 (work in progress), July 2015.




Song, et al.            Expires December 31, 2017              [Page 22]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   [I-D.wkumari-dnsop-trust-management]
              Kumari, W., Huston, G., Hunt, E., and R. Arends,
              "Signalling of DNS Security (DNSSEC) Trust Anchors",
              draft-wkumari-dnsop-trust-management-01 (work in
              progress), October 2015.

   [ICANN-ROOT-ROLL]
              "Root Zone KSK Rollover Plan", 2016,
              <https://www.iana.org/reports/2016/root-ksk-rollover-
              design-20160307.pdf>.

   [ISC-TN-2003-1]
              Abley, J., "Hierarchical Anycast for Global Service
              Distribution", March 2003,
              <http://ftp.isc.org/isc/pubs/tn/isc-tn-2003-1.txt>.

   [KROLL-ISSUE]
              "A DNSSEC issue during Yeti KSK rollover", 2016,
              <http://yeti-dns.org/yeti/blog/2016/10/26/
              A-DNSSEC-issue-during-Yeti-KSK-rollover.html>.

   [pcapdump-bug-report]
              Bortzmeyer, S., "pcaputils: IWBN to have an option to run
              a program after file rotation in pcapdump", 2009,
              <https://bugs.debian.org/cgi-bin/
              bugreport.cgi?bug=545985>.

   [Renumbering-J-Root]
              Wessels, D., "Thirteen Years of "Old J-Root"", 2015,
              <https://indico.dns-
              oarc.net/event/24/session/10/contribution/10/material/
              slides/0.pdf>.

   [RFC1034]  Mockapetris, P., "Domain names - concepts and facilities",
              STD 13, RFC 1034, DOI 10.17487/RFC1034, November 1987,
              <http://www.rfc-editor.org/info/rfc1034>.

   [RFC1035]  Mockapetris, P., "Domain names - implementation and
              specification", STD 13, RFC 1035, DOI 10.17487/RFC1035,
              November 1987, <http://www.rfc-editor.org/info/rfc1035>.

   [RFC1996]  Vixie, P., "A Mechanism for Prompt Notification of Zone
              Changes (DNS NOTIFY)", RFC 1996, DOI 10.17487/RFC1996,
              August 1996, <http://www.rfc-editor.org/info/rfc1996>.







Song, et al.            Expires December 31, 2017              [Page 23]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   [RFC4986]  Eland, H., Mundy, R., Crocker, S., and S. Krishnaswamy,
              "Requirements Related to DNS Security (DNSSEC) Trust
              Anchor Rollover", RFC 4986, DOI 10.17487/RFC4986, August
              2007, <http://www.rfc-editor.org/info/rfc4986>.

   [RFC5011]  StJohns, M., "Automated Updates of DNS Security (DNSSEC)
              Trust Anchors", STD 74, RFC 5011, DOI 10.17487/RFC5011,
              September 2007, <http://www.rfc-editor.org/info/rfc5011>.

   [RFC5890]  Klensin, J., "Internationalized Domain Names for
              Applications (IDNA): Definitions and Document Framework",
              RFC 5890, DOI 10.17487/RFC5890, August 2010,
              <http://www.rfc-editor.org/info/rfc5890>.

   [RFC7626]  Bortzmeyer, S., "DNS Privacy Considerations", RFC 7626,
              DOI 10.17487/RFC7626, August 2015,
              <http://www.rfc-editor.org/info/rfc7626>.

   [RFC7720]  Blanchet, M. and L-J. Liman, "DNS Root Name Service
              Protocol and Deployment Requirements", BCP 40, RFC 7720,
              DOI 10.17487/RFC7720, December 2015,
              <http://www.rfc-editor.org/info/rfc7720>.

   [ROOT-FAQ]
              Karrenberg, D., "DNS Root Name Server FAQ", 2007,
              <https://www.isoc.org/briefings/020/>.

   [Root-Zone-Database]
              "Root Zone Database",
              <http://www.iana.org/domains/root/db>.

   [RRL]      Vixie, P. and V. Schryver, "Response Rate Limiting (RRL)",
              June 2012, <http://www.redbarn.org/dns/ratelimits>.

   [RSSAC001]
              "Service Expectations of Root Servers", December 2015,
              <https://www.icann.org/en/system/files/files/rssac-001-
              root-service-expectations-04dec15-en.pdf>.

   [RSSAC023]
              "History of the Root Server System", November 2016,
              <https://www.icann.org/en/system/files/files/rssac-
              023-04nov16-en.pdf>.








Song, et al.            Expires December 31, 2017              [Page 24]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   [TNO]      Gijsen, B., Jamakovic, A., and F. Roijers, "Root Scaling
              Study: Description of the DNS Root Scaling Model",
              September 2009,
              <https://www.icann.org/en/system/files/files/root-scaling-
              model-description-29sep09-en.pdf>.

   [Yeti-DM-Sync-MZSK]
              "Yeti DM Synchronization for MZSK", 2016,
              <https://github.com/BII-Lab/Yeti-Project/blob/master/doc/
              Yeti-DM-Sync-MZSK.md>.

   [Yeti-DNS-Project]
              "Website of Yeti DNS Project", <http://www.yeti-dns.org>.

   [Yeti-glue-issue]
              "Yeti Glue Issue", 2015,
              <http://yeti-dns.org/resource/Yeti-glue-issue.txt>.

Appendix A.  Yeti-Root Hints File

   The following hints file (complete and accurate at the time of
   writing) causes a DNS resolver to use the Yeti DNS testbed in place
   of the production Root Server System and hence participate in
   experiments running on the testbed.

   Note that some lines have been wrapped in the text that follows in
   order to fit within the production constraints of this document.
   Wrapped lines are indicated with a blackslash character ("\"),
   following common convention.


   .                     3600000  IN   NS     bii.dns-lab.net
   bii.dns-lab.net       3600000  IN   AAAA   240c:f:1:22::6
   .                     3600000  IN   NS     yeti-ns.tisf.net
   yeti-ns.tisf.net      3600000  IN   AAAA   2001:559:8000::6
   .                     3600000  IN   NS     yeti-ns.wide.ad.jp
   yeti-ns.wide.ad.jp    3600000  IN   AAAA   2001:200:1d9::35
   .                     3600000  IN   NS     yeti-ns.as59715.net
   yeti-ns.as59715.net   3600000  IN   AAAA   \
                              2a02:cdc5:9715:0:185:5:203:53
   .                     3600000  IN   NS     dahu1.yeti.eu.org
   dahu1.yeti.eu.org     3600000  IN   AAAA   \
                              2001:4b98:dc2:45:216:3eff:fe4b:8c5b
   .                     3600000  IN   NS     ns-yeti.bondis.org
   ns-yeti.bondis.org    3600000  IN   AAAA   2a02:2810:0:405::250
   .                     3600000  IN   NS     yeti-ns.ix.ru
   yeti-ns.ix.ru         3600000  IN   AAAA   2001:6d0:6d06::53
   .                     3600000  IN   NS     yeti.bofh.priv.at



Song, et al.            Expires December 31, 2017              [Page 25]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   yeti.bofh.priv.at     3600000  IN   AAAA   2a01:4f8:161:6106:1::10
   .                     3600000  IN   NS     yeti.ipv6.ernet.in
   yeti.ipv6.ernet.in    3600000  IN   AAAA   2001:e30:1c1e:1::333
   .                     3600000  IN   NS     yeti-dns01.dnsworkshop.org
   yeti-dns01.dnsworkshop.org \
                         3600000  IN   AAAA   2001:1608:10:167:32e::53
   .                     3600000  IN   NS     yeti-ns.conit.co
   yeti-ns.conit.co      3600000  IN   AAAA   \
                             2604:6600:2000:11::4854:a010
   .                     3600000  IN   NS     dahu2.yeti.eu.org
   dahu2.yeti.eu.org     3600000  IN   AAAA   2001:67c:217c:6::2
   .                     3600000  IN   NS     yeti.aquaray.com
   yeti.aquaray.com      3600000  IN   AAAA   2a02:ec0:200::1
   .                     3600000  IN   NS     yeti-ns.switch.ch
   yeti-ns.switch.ch     3600000  IN   AAAA   2001:620:0:ff::29
   .                     3600000  IN   NS     yeti-ns.lab.nic.cl
   yeti-ns.lab.nic.cl    3600000  IN   AAAA   2001:1398:1:21::8001
   .                     3600000  IN   NS     yeti-ns1.dns-lab.net
   yeti-ns1.dns-lab.net  3600000  IN   AAAA   2001:da8:a3:a027::6
   .                     3600000  IN   NS     yeti-ns2.dns-lab.net
   yeti-ns2.dns-lab.net  3600000  IN   AAAA   2001:da8:268:4200::6
   .                     3600000  IN   NS     yeti-ns3.dns-lab.net
   yeti-ns3.dns-lab.net  3600000  IN   AAAA   2400:a980:30ff::6
   .                     3600000  IN   NS     \
                           ca978112ca1bbdcafac231b39a23dc.yeti-dns.net
   ca978112ca1bbdcafac231b39a23dc.yeti-dns.net \
                         3600000  IN   AAAA   2c0f:f530::6
   .                     3600000  IN   NS     \
                           3e23e8160039594a33894f6564e1b1.yeti-dns.net
   3e23e8160039594a33894f6564e1b1.yeti-dns.net \
                         3600000  IN   AAAA   2803:80:1004:63::1
   .                     3600000  IN   NS     \
                           3f79bb7b435b05321651daefd374cd.yeti-dns.net
   3f79bb7b435b05321651daefd374cd.yeti-dns.net \
                         3600000  IN   AAAA   2401:c900:1401:3b:c::6
   .                     3600000  IN   NS     \
                           xn--r2bi1c.xn--h2bv6c0a.xn--h2brj9c
   xn--r2bi1c.xn--h2bv6c0a.xn--h2brj9c \
                         3600000  IN   AAAA   2001:e30:1c1e:10::333
   .                     3600000  IN   NS     yeti1.ipv6.ernet.in
   yeti1.ipv6.ernet.in   3600000  IN   AAAA   2001:e30:187d::333
   .                     3600000  IN   NS     yeti-dns02.dnsworkshop.org
   yeti-dns02.dnsworkshop.org \
                         3600000  IN   AAAA   2001:19f0:0:1133::53
   .                     3600000  IN   NS     yeti.mind-dns.nl
   yeti.mind-dns.nl      3600000  IN   AAAA   2a02:990:100:b01::53:0





Song, et al.            Expires December 31, 2017              [Page 26]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


Appendix B.  About This Document

   This section (and sub-sections) has been included as an aid to
   reviewers of this document, and should be removed prior to
   publication.

B.1.  Venue

   The authors propose that this document proceeed as an Independent
   Submission, since it documents work that, although relevant to the
   IETF, has been carried out externally to any IETF working group.
   However, a suitable venue for discussion of this document is the
   dnsop working group.

   Information about the Yeti DNS project and discussion relating to
   particular experiments described in this document can be found at
   <https://yeti-dns.org/>.

   This document is maintained in GitHub at <https://github.com/BII-Lab/
   yeti-testbed-experience>.

B.2.  Revision History

B.2.1.  draft-song-yeti-testbed-experience-04

   Add Joe Abley as co-editor.  Substantial editorial review.

Authors' Addresses

   Linjian Song (editor)
   Beijing Internet Institute
   2508 Room, 25th Floor, Tower A, Time Fortune
   Beijing  100028
   P. R. China

   Email: songlinjian@gmail.com
   URI:   http://www.biigroup.com/


   Dong Liu (editor)
   Beijing Internet Institute
   2508 Room, 25th Floor, Tower A, Time Fortune
   Beijing  100028
   P. R. China

   Email: dliu@biigroup.com
   URI:   http://www.biigroup.com/




Song, et al.            Expires December 31, 2017              [Page 27]

Internet-Draft      Yeti DNS Testbed: Interim Results          June 2017


   Paul Vixie (editor)
   TISF
   11400 La Honda Road
   Woodside, California  94062
   US

   Email: vixie@tisf.net
   URI:   http://www.redbarn.org/


   Akira Kato (editor)
   Keio University/WIDE Project
   Graduate School of Media Design, 4-1-1 Hiyoshi, Kohoku
   Yokohama  223-8526
   JAPAN

   Email: kato@wide.ad.jp
   URI:   http://www.kmd.keio.ac.jp/


   Joe Abley (editor)
   Snake Hill Labs
   300-184 York Street
   London, ON  N6A 1B5
   Canada

   Email: jabley@shl.io
   URI:   http://www.shl.io/























Song, et al.            Expires December 31, 2017              [Page 28]
